{"ast":null,"code":"import _objectSpread from \"/Users/javi/Documents/ironhack/proyectoFinal/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/javi/Documents/ironhack/proyectoFinal/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/javi/Documents/ironhack/proyectoFinal/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/javi/Documents/ironhack/proyectoFinal/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/javi/Documents/ironhack/proyectoFinal/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/javi/Documents/ironhack/proyectoFinal/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/javi/Documents/ironhack/proyectoFinal/client/src/components/contents/Chart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2'; // import { threadId } from 'worker_threads';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      weight: _this.props.weight\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState(_objectSpread({}, this.state, {\n        weight: nextProps.weight\n      }));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.graphicUpdate();\n    }\n  }, {\n    key: \"graphicUpdate\",\n    value: function graphicUpdate() {\n      console.log('hola');\n      return {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [{\n          label: \"Weight\",\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(51, 109, 233,0.4)\",\n          borderColor: \"rgba(51,109,233,1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(75,192,192,1)\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [20, 40, 50, 55, 60, 75, 60]\n        }]\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Line, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["/Users/javi/Documents/ironhack/proyectoFinal/client/src/components/contents/Chart.js"],"names":["React","Component","Line","Chart","props","state","weight","nextProps","setState","graphicUpdate","console","log","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CACA;;IAGqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWE;AADV,KAAb;AAFe;AAKlB;;;;8CAEyBC,S,EAAW;AACjC,WAAKC,QAAL,mBAAmB,KAAKH,KAAxB;AAA+BC,QAAAA,MAAM,EAAEC,SAAS,CAACD;AAAjD;AACH;;;yCAEoB;AACjB,WAAKG,aAAL;AACH;;;oCAEe;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAO;AACHC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADL;AAEHC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,QADX;AAEIC,UAAAA,IAAI,EAAE,IAFV;AAGIC,UAAAA,WAAW,EAAE,GAHjB;AAIIC,UAAAA,eAAe,EAAE,wBAJrB;AAKIC,UAAAA,WAAW,EAAE,oBALjB;AAMIC,UAAAA,cAAc,EAAE,MANpB;AAOIC,UAAAA,UAAU,EAAE,EAPhB;AAQIC,UAAAA,gBAAgB,EAAE,GARtB;AASIC,UAAAA,eAAe,EAAE,OATrB;AAUIC,UAAAA,gBAAgB,EAAE,oBAVtB;AAWIC,UAAAA,oBAAoB,EAAE,MAX1B;AAYIC,UAAAA,gBAAgB,EAAE,CAZtB;AAaIC,UAAAA,gBAAgB,EAAE,CAbtB;AAcIC,UAAAA,yBAAyB,EAAE,oBAd/B;AAeIC,UAAAA,qBAAqB,EAAE,qBAf3B;AAgBIC,UAAAA,qBAAqB,EAAE,CAhB3B;AAiBIC,UAAAA,WAAW,EAAE,CAjBjB;AAkBIC,UAAAA,cAAc,EAAE,EAlBpB;AAmBIC,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAnBV,SADM;AAFP,OAAP;AA0BH;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAlD8B/B,S;;SAAdE,K","sourcesContent":["import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\n// import { threadId } from 'worker_threads';\n\n\nexport default class Chart extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            weight: this.props.weight\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ ...this.state, weight: nextProps.weight })\n    }\n\n    componentDidUpdate() {\n        this.graphicUpdate()\n    }\n\n    graphicUpdate() {\n        console.log('hola')\n        return {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n            datasets: [\n                {\n                    label: \"Weight\",\n                    fill: true,\n                    lineTension: 0.1,\n                    backgroundColor: \"rgba(51, 109, 233,0.4)\",\n                    borderColor: \"rgba(51,109,233,1)\",\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"rgba(75,192,192,1)\",\n                    pointBackgroundColor: \"#fff\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                    pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: [20, 40, 50, 55, 60, 75, 60]\n                }\n            ]\n        };\n    }\n\n    render() {\n        return (\n            <Line data={data} />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}